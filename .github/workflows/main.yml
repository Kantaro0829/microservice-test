# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
          echo the version of python
          python3 --version
          echo the version of docker and docker-compose
          docker -v
          docker-compose -v
          echo current directry
          ls
          echo install library
          pip install flake8
          pip install autopep8
          pip install pytest
          echo #checking and formatting python file#
          autopep8 --in-place ./service1/app.py
          autopep8 --in-place ./service2/app.py
          flake8 ./service1/app.py
          flake8 ./service2/app.py
          
      - name: docker login
        run: |
          echo login to docker hub
          docker login -u ${{ secrets.USER_NAME }} -p ${{ secrets.PASSWORD }}
      
      - name: docker-compose build image
        run: |
          echo build each images
          docker-compose build service1
          docker-compose build service2
          docker-compose build nginx
          echo show built images
          docker images
      
      - name: push images to the dockerHub
        run: |
          echo push to dockerhub
          docker push ${{ secrets.SERVICE1_REPO}}:`date '+%Y/%m/%d%r')`
          docker push ${{ secrets.SERVICE2_REPO}}:`date '+%Y/%m/%d%r')`

          
